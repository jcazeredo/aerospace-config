# ====================================================================
# AEROSPACE CONFIG: KEYBOARD-CENTRIC PRODUCTIVITY AND FLEXIBILITY
# Optimized for multi-monitor setups (without forced monitor assignment).
# ====================================================================

# =======================#
# 1. STARTUP COMMANDS
# =======================#

# Start AeroSpace automatically on macOS login
start-at-login = true

# Empty commands, as window automation is handled via [[on-window-detected]]
after-login-command = []

# Initialize JankyBorders (Requires manual installation)
after-startup-command = [
    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# =======================#
# 2. WINDOW BEHAVIOR
# =======================#

# Normalize the window tree to prevent unnecessary divisions
enable-normalization-flatten-containers = true
# Ensure nested divisions have opposite orientation (Horizontal -> Vertical)
enable-normalization-opposite-orientation-for-nested-containers = true

# Visible size for windows in 'accordion' mode
accordion-padding = 35
# Default layout for new Workspaces
default-root-container-layout = 'tiles'
default-root-container-orientation = 'auto'

# Ensure the mouse cursor follows keyboard focus to the monitor
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Force visibility of apps hidden by Cmd+H (maintains WM control)
automatically-unhide-macos-hidden-apps = true

# Key mapping
[key-mapping]
preset = 'qwerty'

# =======================#
# 3. GAPS (SPACING)
# =======================#
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10


# ====================================================================
# 4. WORKFLOW SHORTCUTS - MODE 'MAIN'
# ====================================================================
[mode.main.binding]

### MONITOR FOCUS (Ctrl + Alt + [Direction]) ###
# Move focus (and mouse) to the screen in the specified direction. Essential for multi-monitor.
ctrl-alt-h = 'focus-monitor left'
ctrl-alt-l = 'focus-monitor right'
ctrl-alt-k = 'focus-monitor up'
ctrl-alt-j = 'focus-monitor down'

### MOVE WORKSPACE TO MONITOR (Ctrl + Alt + Shift + [Direction]) ###
# Move the ENTIRE workspace to the specific monitor (Parallel logic to Focus Monitor).
ctrl-alt-shift-h = 'move-workspace-to-monitor left'
ctrl-alt-shift-l = 'move-workspace-to-monitor right'
ctrl-alt-shift-k = 'move-workspace-to-monitor up'
ctrl-alt-shift-j = 'move-workspace-to-monitor down'

# Fallback shortcut to move the workspace to the next sequential monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next' 


### WINDOW NAVIGATION AND FOCUS (Alt + HJKL) ###
# Vim-style navigation to focus the adjacent window.
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

### MOVE WINDOW (Alt + Shift + HJKL) ###
# Move the focused window within the current workspace.
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

### RESIZE (Alt + +/-) ###
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

### LAYOUTS AND TOGGLES ###
alt-slash = 'layout tiles horizontal vertical'       # Toggle between Horizontal/Vertical Tiles
alt-comma = 'layout accordion horizontal vertical' # Toggle between Horizontal/Vertical Accordion
cmd-alt-f = 'fullscreen'                           # Toggles AeroSpace Fullscreen (Zoom)
cmd-shift-f = 'macos-native-fullscreen'            # Toggles native macOS Fullscreen

# Mnemonic Workspaces: C-Code, T-Terminal, W-Web, D-Docs, S-Social, U-Utils

### MNEMONIC WORKSPACES (FOCUS AND MOVE) ###
alt-c = 'workspace C̲ode'
alt-shift-c = 'move-node-to-workspace C̲ode'

alt-t = 'workspace T̲erminal'
alt-shift-t = 'move-node-to-workspace T̲erminal'

alt-w = 'workspace W̲eb'
alt-shift-w = 'move-node-to-workspace W̲eb'

alt-d = 'workspace D̲ocs'
alt-shift-d = 'move-node-to-workspace D̲ocs'

alt-s = 'workspace S̲ocial'
alt-shift-s = 'move-node-to-workspace S̲ocial'

alt-u = 'workspace U̲tils'
alt-shift-u = 'move-node-to-workspace U̲tils'

alt-o = 'workspace Other'
alt-shift-o = 'move-node-to-workspace Other'

### WORKSPACE UTILS ###
alt-tab = 'workspace-back-and-forth' # Toggle to the previous Workspace

### SERVICE MODE ###
# Enter maintenance utilities mode to Reload, Reset Layout, etc.
alt-shift-semicolon = 'mode service'

# ====================================================================
# 5. MAINTENANCE SHORTCUTS - MODE 'SERVICE'
# (Activated after Alt+Shift+Semicolon)
# ====================================================================
[mode.service.binding]
esc = ['reload-config', 'mode main']                   # Reload config and return to 'main'
r = ['flatten-workspace-tree', 'mode main']            # Reset the layout of the current workspace
f = ['layout floating tiling', 'mode main']            # Toggle focused window between floating/tiling
backspace = ['close-all-windows-but-current', 'mode main'] # Close everything but the focused window

# Window Join Commands (Enter service mode and press H, J, K, or L)
h = ['join-with left', 'mode main']
j = ['join-with down', 'mode main']
k = ['join-with up', 'mode main']
l = ['join-with right', 'mode main']


# ====================================================================
# 6. AUTOMATIC APP ASSIGNMENT (Window Automation)
# ====================================================================

# CODE WORKSPACES (C̲ode)
[[on-window-detected]]
if.app-id = 'com.jetbrains.pycharm'
run = ['layout tiling', 'move-node-to-workspace C̲ode']

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['layout tiling', 'move-node-to-workspace C̲ode']

[[on-window-detected]]
if.app-id = 'com.sublimetext.4'
run = ['layout tiling', 'move-node-to-workspace C̲ode']


# TERMINAL WORKSPACES (T̲erminal)
[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
run = ['layout tiling', 'move-node-to-workspace T̲erminal']

[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
run = ['layout tiling', 'move-node-to-workspace T̲erminal']


# WEB WORKSPACES (W̲eb)
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = ['layout tiling', 'move-node-to-workspace W̲eb']

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['layout tiling', 'move-node-to-workspace W̲eb']

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = ['layout tiling', 'move-node-to-workspace W̲eb']


# SOCIAL AND MEDIA WORKSPACES (S̲ocial)
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['layout tiling', 'move-node-to-workspace S̲ocial']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['layout tiling', 'move-node-to-workspace S̲ocial']


# FLOATING WORKSPACES (Ignore Tiling)
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Calculator'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.nordvpn.macos'
run = ['layout floating']

# Everything else opens floating
[[on-window-detected]]
run = ['layout floating']